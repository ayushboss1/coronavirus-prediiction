# -*- coding: utf-8 -*-
"""Copy of first code.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1urTrIXwVh9VonlILneA1Boj7YXnd4nMZ
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as ps
import plotly.graph_objects as go
import folium 
from folium import plugins

plt.rcParams['figure.figsize'] = 10,13

"""# New Section"""



df_India = pd.read_excel('/content/Covid cases in India.xlsx')
df_India

df_India_cord = pd.read_excel('/content/Indian Coordinates.xlsx')

daily_India = pd.read_excel('/content/per_day_cases.xlsx' ,parse_dates=True ,sheet_name='India')
daily_italy = pd.read_excel('/content/per_day_cases.xlsx' ,parse_dates=True ,sheet_name='Italy')
daily_Wuhan = pd.read_excel('/content/per_day_cases.xlsx' ,parse_dates=True ,sheet_name='Wuhan')
daily_korea = pd.read_excel('/content/per_day_cases.xlsx', parse_dates=True ,sheet_name='Korea')

daily_India

df = df_India
df.style.background_gradient(cmap = 'Reds')

df = pd.read_csv('/content/covid_19_clean_complete.xls')
df.tail(50)

from fbprophet import Prophet

confirmed = df.groupby('Date').sum()['Confirmed'].reset_index()
death = df.groupby('Date').sum()['Deaths'].reset_index()
recovered = df.groupby('Date').sum()['Recovered'].reset_index()

confirmed

confirmed.columns = ['ds','y']
confirmed['ds'] = pd.to_datetime(confirmed['ds'])

confirmed.tail()

m = Prophet(interval_width=1)
m.fit(confirmed)
future = m.make_future_dataframe(periods=7)
future.tail()

forecast = m.predict(future)
forecast[['ds','yhat','yhat_lower','yhat_upper']].tail()

confirmed_forecast = m.plot(forecast)
confirmed_forecast = m.plot_components(forecast)

death.columns = ['ds','y']
death['ds'] = pd.to_datetime(death['ds'])

m = Prophet(interval_width=0.95)
m.fit(death)
future = m.make_future_dataframe(periods=7)
future.tail()

forecast = m.predict(future)
forecast[['ds','yhat','yhat_lower','yhat_upper']].tail()

death_forecast = m.plot(forecast)
death_forecast = m.plot_components(forecast)